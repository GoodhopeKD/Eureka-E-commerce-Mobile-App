/** commands **/
npx create-react-native-app Eureka
cd Eureka

yarn
** OR **
npm install

/** actions **/
-copy folder app-src to root directory

-create file react-native.config.js if it doesn't exist and add:

module.exports={
    assets:[
        "./app-src/assets/fonts"
    ]
}

/** commands **/
yarn react-native link
** OR **
npm react-native link

rm -R android/app/src/main/assets/fonts

/** actions **/

-edit index.js to update App import to:
import App from './app-src/AppContainer';

-edit package.json to add the following under scripts:
"android-create-debug-app": "sudo mkdir -p android/app/src/main/assets/ && sudo react-native bundle --platform android --minify --dev false --entry-file index.js --bundle-output android/app/src/main/assets/index.android.bundle --assets-dest android/app/src/main/res && cd android && ./gradlew assembleDebug && cd .. && mv android/app/build/outputs/apk/debug/app-debug.apk app-debug.apk"

-edit android/app/build.gradle
replace
def jscFlavor = 'org.webkit:android-jsc:+'
with
def jscFlavor = 'org.webkit:android-jsc-intl:+'

-edit ios/ProjectName/info.plist to add
<key>NSPhotoLibraryUsageDescription</key>
<string>Give $(PRODUCT_NAME) permission to save photos</string>
<key>NSCameraUsageDescription</key>
<string>Give $(PRODUCT_NAME) permission to access your camera</string>
<key>NSMicrophoneUsageDescription</key>
<string>Give $(PRODUCT_NAME) permission to use your microphone</string>

-edit android/app/src/main/AndroidManifest.xml to add permissions
<!-- Added permissions -->
<uses-permission android:name="android.permission.CAMERA" />
<uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
<uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />

-edit android/app/src/main/AndroidManifest.xml to add activity
<activity
  android:name="com.theartofdev.edmodo.cropper.CropImageActivity"
  android:theme="@style/Base.Theme.AppCompat">
</activity>

/** commands **/
sudo chmod +x app-src/copy_assets.sh
./app-src/copy_assets.sh

expo install typescript moment react-native-bg-thread @react-native-community/netinfo expo-device axios redux react-redux redux-thunk redux-persist @react-native-async-storage/async-storage firebase react-redux-firebase redux-firestore @react-navigation/native react-native-reanimated react-native-gesture-handler react-native-screens react-native-safe-area-context @react-navigation/stack @react-navigation/material-bottom-tabs react-native-paper react-native-vector-icons @react-navigation/material-top-tabs react-native-tab-view react-native-pager-view react-native-elements react-native-material-ui react-native-material-menu expo-image-picker react-native-raw-bottom-sheet react-native-image-slider-box react-native-counters react-native-date-picker

/** commands **/
cd ios && pod install && cd ..

/** actions **/
-start editing

/** packages list **/

typescript
moment
react-native-bg-thread
@react-native-community/netinfo
expo-device
axios

redux
react-redux
redux-thunk
redux-persist
@react-native-async-storage/async-storage

firebase
react-redux-firebase
redux-firestore

@react-navigation/native
react-native-reanimated
react-native-gesture-handler
react-native-screens
react-native-safe-area-context

@react-navigation/stack

@react-navigation/material-bottom-tabs
react-native-paper
react-native-vector-icons

@react-navigation/material-top-tabs
react-native-tab-view
react-native-pager-view

react-native-elements
react-native-material-ui
react-native-material-menu
expo-image-picker
react-native-raw-bottom-sheet
react-native-image-slider-box
react-native-counters
react-native-date-picker

/** Laravel hot items **/

app/Http/Controllers/*
app/Http/Middleware/EnsureAppAccessTokenIsValid.php
app/Http/Middleware/EnsureUserIsAdmin.php
app/Http/Resources/*
app/Models/*
database/migrations/*
routes/api.php

/** Testing setup and tools **/

https://reactnativetesting.io contains proper documentation on some steps taken to install and run tests

Unit test - Jest and ESLint

Jest 

$ yarn add --dev jest-expo

Run a smoke test after installing to confirm installation via https://reactnativetesting.io/unit/setup.html#smoke-test

ESLint

$ yarn add --dev eslint \
               babel-eslint \
               @react-native-community/eslint-config

Create .eslintrc.js file to the root directory then add code into the file via https://reactnativetesting.io/unit/setup.html#configuring-eslint
Then add .prettierrc.js file to the root directory and add code into the file via https://reactnativetesting.io/unit/setup.html#configuring-eslint then add "lint": "eslint .", under "scripts" in package.json file

Also search 'ESLint' in VSCode Extensions and install

Component test - Enzyme and React Native Testing library

Enzyme

$ yarn add -D enzyme \
            enzyme-adapter-react-16 \
            @jonny/react-native-mock

React Native Testing library
$ yarn add --dev @testing-library/react-native

Run a smoke test after installing to confirm installation via https://reactnativetesting.io/component/setup.html#installing-react-native-testing-library

End-to-End test - Detox

Detox

$ xcode-select --install
$ brew tap wix/brew
$ brew install applesimutils
(Apple simulator utils need to be at the most current version so its best to alway update using $ brew reinstall applesimutils )
$ npm install -g detox-cli

$ yarn add --dev detox jest-circus

$ detox init -r jest

After last installation Detox creates .detoxrc.json in root directory, find this file and delete it, open package.json and add (this is the config for iOS):

"detox": {
    "test-runner": "jest",
    "configurations": {
      "ios.sim.debug": {
        "binaryPath": "ios/build/Build/Products/Debug-iphonesimulator/EurekaMobile.app",
        "build": "xcodebuild -workspace ios/EurekaMobile.xcworkspace -scheme EurekaMobile -configuration Debug -sdk iphonesimulator -derivedDataPath ios/build",
        "type": "ios.simulator",
        "name": "iPhone 12"
      }
    }
}

just below the "jest" configuration as this is a better option to have the config all together.

$ yarn add --dev eslint-plugin-detox

Add the detox plugin and environment to your .eslintrc.js as explained in https://reactnativetesting.io/e2e/setup.html#configuring-eslint

$ detox test 

the above command runs for an unspecified device, without configs for a specific OS installed

Setting up test config for android

First check for java version using

$ java -version

Add the following code after the last line of code in android.defaultConfig:

defaultConfig {
  testBuildType System.getProperty('testBuildType', 'debug')
  testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
}

Then add this in android.buildTypes.release:

// Detox-specific additions to pro-guard
proguardFile "${rootProject.projectDir}/../node_modules/detox/android/detox/proguard-rules-app.pro"

Finally add these lines in your android.dependencies section: 

androidTestImplementation('com.wix:detox:+') { transitive = true }
androidTestImplementation 'junit:junit:4.12'
implementation "androidx.annotation:annotation:1.1.0"

Under app-src create a folder name androidTest, inside that folder create a folder called java, inside that folder create a folder called com, then inside that folder create a folder with app's name 'Eureka/EurekaMobile' then create a file inside called DetoxTest.java, file path should look like:
app-src/androidTest/java/com/Eureka/EurekaMobile/DetoxTest.java

inside DetoxTest.java add the following and save:

package com.detoxexample;

import com.wix.detox.Detox;

import org.junit.Rule;
import org.junit.Test;
import org.junit.runner.RunWith;

import androidx.test.ext.junit.runners.AndroidJUnit4;
import androidx.test.filters.LargeTest;
import androidx.test.rule.ActivityTestRule;

@RunWith(AndroidJUnit4.class)
@LargeTest
public class DetoxTest {

    @Rule
    public ActivityTestRule<MainActivity> mActivityRule = new ActivityTestRule<>(MainActivity.class, false, false);

    @Test
    public void runDetoxTests() {
        Detox.runTests(mActivityRule);
    }
}

Open package.json and add the following code under detox.configurations below/above ios.sim.debug config:

"android.emu.debug": {
  "binaryPath": "android/app/build/outputs/apk/debug/app-debug.apk",
  "build": "cd android && ./gradlew assembleDebug assembleAndroidTest -DtestBuildType=debug && cd ..",
  "type": "android.emulator",
  "name": "Pixel_2_XL_API_29_2" /* configure and replace with your specific emulator */
},
"android.emu.release": {
  "binaryPath": "android/app/build/outputs/apk/release/app-release.apk",
  "build": "cd android && ./gradlew assembleRelease assembleAndroidTest -DtestBuildType=release && cd ..",
  "type": "android.emulator",
  "name": "Pixel_2_XL_API_29_2" /* configure and replace with your specific emulator */
},
"android.wallet.device": {
  "binaryPath": "android/app/build/outputs/apk/debug/app-debug.apk",
  "build": "cd android && ./gradlew assembleDebug assembleAndroidTest -DtestBuildType=debug && cd ..",
  "type": "android.attached",
  "name": "HXT7N189110016862" /* find and replace with your actual device name to use a physical phone */
}

change directory to android

$ cd android

then run 

./gradlew assembleDebug assembleAndroidTest -DtestBuildType=debug

go back to home directory

$ cd ..

Add the following to package.json under "scripts":

  "e2e:build-ios": "detox build --configuration ios",
  "e2e:build-android": "detox build --configuration android",
  "e2e:run-ios": "detox test --configuration ios",
  "e2e: run-android": "detox test --configuration android",

start metro bundler

$ react-native start

then run test using specific OS

Android
$ detox test -c android.emu.debug
or 
$ detox test --configuration=android.wallet.device /* run on a physical device */

iOS
$ detox test --configuration ios.sim.debug

Troubleshooting
In case you encounter an issue with the test suite failing to run, run:

$ npm install 

the above instruction updates npm and repairs any issues

or

$ npm install detox --save-dev

rebuilds the whole detox suits and repairs any issues

Date, time and image pickers

$ expo install react-native-date-picker expo-image-picker

$ cd ios 

$ pod install

$ cd ..